var searchIndex = new Map(JSON.parse('[["torch_rs",{"t":"CCCCCCCHHKMMCMCCMFONNNNNNONNONNONNNNOFNNNNNNNNNNNNNNFNNNNNNNONNNNNNNKCMMCCCCFNNNNNNNNNNNNFNNNNNNNHNNNNNFNNNNNNNHNNNNNFNNNNNNNNNNNNFNNNNNNNNNNNNKCMMFNNNNNONONNNNNNNFFNNNNNNNNNNNNNONONNNNNNNNNONNNNNNNNNNNNNNONNNNONNNNNNNNNNNNNNNNNNNNFKFONNNNOONNMNNNNMNNNNNONNNNNNNN","n":["autograd","functional","nn","ops","optimizer","tensor","utils","mse_loss","relu","Module","eval","forward","linear","parameters","relu","sequential","train","Linear","b","borrow","borrow_mut","eval","fmt","forward","from","in_features","into","new","out_features","parameters","train","training","try_from","try_into","type_id","vzip","w","ReLU","borrow","borrow_mut","eval","fmt","forward","from","into","new","parameters","train","try_from","try_into","type_id","vzip","Sequential","borrow","borrow_mut","eval","fmt","forward","from","into","layers","new","parameters","train","try_from","try_into","type_id","vzip","Op","add","backward","forward","matmul","mean","mul","relu","AddOp","backward","borrow","borrow_mut","fmt","forward","from","into","new","try_from","try_into","type_id","vzip","MatMul","backward","borrow","borrow_mut","fmt","forward","from","into","matmul","new","try_from","try_into","type_id","vzip","Mean","backward","borrow","borrow_mut","fmt","forward","from","into","mean","new","try_from","try_into","type_id","vzip","Multiply","backward","borrow","borrow_mut","fmt","forward","from","into","new","try_from","try_into","type_id","vzip","ReLU","backward","borrow","borrow_mut","fmt","forward","from","into","new","try_from","try_into","type_id","vzip","Optimizer","SGD","step","zero_grad","SGD","borrow","borrow_mut","fmt","from","into","lr","new","params","set_lr","step","try_from","try_into","type_id","vzip","zero_grad","Tensor","TensorData","add","add_parent","backward","borrow","","borrow_mut","","clone","","clone_into","","clone_to_uninit","","creator","data","","detach","dim","fmt","","from","","","","","grad","index","into","","is_leaf","item","mean","mul","","","new","","numel","ones","ones_like","parents","rand_like","randn","require_grad","requires_grad","","reshape","set_creator","shape","size","squeeze","stack","to_owned","","try_from","","try_into","","type_id","","unsqueeze","view","vzip","","zeros","zeros_like","DataLoader","Dataset","TensorDataset","batch_size","borrow","","borrow_mut","","data","dataset","from","","get","","into","","into_iter","len","","new","","next","reset","targets","try_from","","try_into","","type_id","","vzip",""],"q":[[0,"torch_rs"],[7,"torch_rs::functional"],[9,"torch_rs::nn"],[17,"torch_rs::nn::linear"],[37,"torch_rs::nn::relu"],[52,"torch_rs::nn::sequential"],[68,"torch_rs::ops"],[76,"torch_rs::ops::add"],[89,"torch_rs::ops::matmul"],[103,"torch_rs::ops::mean"],[117,"torch_rs::ops::mul"],[130,"torch_rs::ops::relu"],[143,"torch_rs::optimizer"],[147,"torch_rs::optimizer::SGD"],[163,"torch_rs::tensor"],[231,"torch_rs::utils"],[263,"alloc::vec"],[264,"core::fmt"],[265,"core::result"],[266,"core::any"],[267,"alloc::boxed"],[268,"ndarray::aliases"],[269,"core::option"],[270,"alloc::rc"]],"i":"``````````h0`0``0`n000000000000000000`Al0000000000000`An00000000000000``Bb0`````Bj00000000000`Bl000000`00000`Bn000000`00000`C`00000000000`Cb00000000000``Cd0`Cf00000000000000``bCh1010101010101011010111101011111110111101110010111101010101110111```DdDf1010101Dh1122011222112121212","f":"```````{{{d{b}}{d{b}}}b}{{{d{b}}}b}`{{{d{fh}}}j}{{{d{h}}{d{b}}}b}`{{{d{h}}}{{l{b}}}}``2`{nb}{d{{d{c}}}{}}{{{d{f}}}{{d{fc}}}{}}{{{d{fn}}}j}{{{d{n}}{d{fA`}}}Ab}{{{d{n}}{d{b}}}b}{cc{}}{nAd}{{}c{}}{{AdAd}n}2{{{d{n}}}{{l{b}}}}7{nAf}{c{{Ah{e}}}{}{}}{{}{{Ah{c}}}{}}{dAj}{{}c{}}?`>={{{d{fAl}}}j}{{{d{Al}}{d{fA`}}}Ab}{{{d{Al}}{d{b}}}b}<:{{}Al}{{{d{Al}}}{{l{b}}}}48765`{d{{d{c}}}{}}{{{d{f}}}{{d{fc}}}{}}{{{d{fAn}}}j}{{{d{An}}{d{fA`}}}Ab}{{{d{An}}{d{b}}}b}{cc{}}{{}c{}}{Anl}{{{l{{B`{h}}}}}An}{{{d{An}}}{{l{b}}}}7{c{{Ah{e}}}{}{}}{{}{{Ah{c}}}{}}{dAj}{{}c{}}``{{{d{Bb}}{d{b}}}{{l{{Bf{Bd}}}}}}{{{d{Bb}}{d{{Bh{{d{b}}}}}}}b}`````{{{d{Bj}}{d{b}}}{{l{{Bf{Bd}}}}}}{d{{d{c}}}{}}{{{d{f}}}{{d{fc}}}{}}{{{d{Bj}}{d{fA`}}}Ab}{{{d{Bj}}{d{{Bh{{d{b}}}}}}}b}?>{{{l{Ad}}{l{Ad}}}Bj};:98`{{{d{Bl}}{d{b}}}{{l{{Bf{Bd}}}}}}54{{{d{Bl}}{d{fA`}}}Ab}{{{d{Bl}}{d{{Bh{{d{b}}}}}}}b}{cc{}}{{}c{}}{{{d{b}}{d{b}}}b}{{}Bl}{c{{Ah{e}}}{}{}}{{}{{Ah{c}}}{}}{dAj}{{}c{}}`{{{d{Bn}}{d{b}}}{{l{{Bf{Bd}}}}}}{d{{d{c}}}{}}{{{d{f}}}{{d{fc}}}{}}{{{d{Bn}}{d{fA`}}}Ab}{{{d{Bn}}{d{{Bh{{d{b}}}}}}}b}<;{{{d{b}}}b}{{{l{Ad}}}Bn}:987`{{{d{C`}}{d{b}}}{{l{{Bf{Bd}}}}}}65{{{d{C`}}{d{fA`}}}Ab}{{{d{C`}}{d{{Bh{{d{b}}}}}}}b}{cc{}}{{}c{}}{{{l{{l{Ad}}}}}C`}{c{{Ah{e}}}{}{}}{{}{{Ah{c}}}{}}{dAj}{{}c{}}`{{{d{Cb}}{d{b}}}{{l{{Bf{Bd}}}}}}{d{{d{c}}}{}}{{{d{f}}}{{d{fc}}}{}}{{{d{Cb}}{d{fA`}}}Ab}{{{d{Cb}}{d{{Bh{{d{b}}}}}}}b};:{{}Cb}9876``{{{d{fCd}}}j}0`54{{{d{Cf}}{d{fA`}}}Ab}>={CfBd}{{{l{b}}Bd}Cf}{Cfl}{{{d{fCf}}Bd}j}{{{d{fCf}}}j}{c{{Ah{e}}}{}{}}{{}{{Ah{c}}}{}}{dAj}{{}c{}}4``{{{d{b}}{d{b}}}b}{{{d{fCh}}{d{b}}}j}{{{d{b}}}j}{d{{d{c}}}{}}0{{{d{f}}}{{d{fc}}}{}}0{{{d{Ch}}}Ch}{{{d{b}}}b}{{d{d{fc}}}j{}}0{{dCj}j}0{ChCl}{{{d{b}}}{{Bf{Bd}}}}{ChBf}5{{{d{b}}}Ad}{{{d{Ch}}{d{fA`}}}Ab}{{{d{b}}{d{fA`}}}Ab}{cc{}}{{{d{{Bh{Bd}}}}}b}1{{{Bf{Bd}}}b}{{{l{Bd}}}b}9{{{d{b}}{d{{Bh{Ad}}}}}{{Ah{b{d{Cn}}}}}}{{}c{}}0{{{d{b}}}Af}{{{d{b}}}{{Ah{b{d{Cn}}}}}}{{{d{b}}}b}{{{d{b}}{d{b}}}b}{{{d{b}}D`}b}{{{d{b}}Bd}b}{{{Bf{Bd}}}Ch}:?{{{d{{Bh{Ad}}}}}b}5{Chl}61{{{d{b}}Af}b}{{ChAf}Ch}{ChAf}={{{d{fCh}}{Db{Bb}}}j}{{{d{b}}}{{l{Ad}}}}{{{d{b}}Ad}{{Cl{Ad}}}}{{{d{b}}{Cl{Ad}}}{{Ah{b{d{Cn}}}}}}{{{d{{Bh{b}}}}}{{Ah{b{d{Cn}}}}}}{dc{}}0{c{{Ah{e}}}{}{}}0{{}{{Ah{c}}}{}}0{dAj}0{{{d{b}}Ad}{{Ah{b{d{Cn}}}}}}{{{d{b}}{d{{Bh{Ad}}}}}{{Ah{b{d{Cn}}}}}}{{}c{}}0{{{d{{Bh{Ad}}}}}b}{{{d{b}}}b}```{DdAd}{d{{d{c}}}{}}0{{{d{f}}}{{d{fc}}}{}}0{Dfl}{Ddd}{cc{}}0{{{d{Dh}}Ad}{{Dj{bb}}}}{{{d{Df}}Ad}{{Dj{bb}}}}{{}c{}}0{{}c{}}{{{d{Dh}}}Ad}{{{d{Df}}}Ad}{{{l{b}}{l{b}}}Df}{{{d{c}}AdAf}{{Dd{c}}}Dh}{{{d{f{Dd{c}}}}}{{Cl{e}}}Dh{}}{{{d{f{Dd{c}}}}}jDh}<{c{{Ah{e}}}{}{}}0{{}{{Ah{c}}}{}}0{dAj}0{{}c{}}0","D":"Mj","p":[[5,"Tensor",163],[1,"reference",null,null,1],[0,"mut"],[10,"Module",9],[1,"unit"],[5,"Vec",263],[5,"Linear",17],[5,"Formatter",264],[8,"Result",264],[1,"usize"],[1,"bool"],[6,"Result",265,null,1],[5,"TypeId",266],[5,"ReLU",37],[5,"Sequential",52],[5,"Box",267,null,1],[10,"Op",68],[1,"f32"],[8,"ArrayD",268],[1,"slice"],[5,"AddOp",76],[5,"MatMul",89],[5,"Mean",103],[5,"Multiply",117],[5,"ReLU",130],[10,"Optimizer",143],[5,"SGD",147],[5,"TensorData",163],[1,"u8"],[6,"Option",269,null,1],[1,"str"],[1,"f64"],[5,"Rc",270,null,1],[5,"DataLoader",231],[5,"TensorDataset",231],[10,"Dataset",231],[1,"tuple",null,null,1]],"r":[],"b":[[186,"impl-From%3C%26%5Bf32%5D%3E-for-Tensor"],[188,"impl-From%3CArrayBase%3COwnedRepr%3Cf32%3E,+Dim%3CIxDynImpl%3E%3E%3E-for-Tensor"],[189,"impl-From%3CVec%3Cf32%3E%3E-for-Tensor"],[197,"impl-Mul%3C%26Tensor%3E-for-%26Tensor"],[198,"impl-Mul%3Cf64%3E-for-%26Tensor"],[199,"impl-Mul%3Cf32%3E-for-%26Tensor"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAJoAIAABAAYADQAAAA8AAQAUAAEAFwAAACEAAwAmAAUALgAMAD0ACQBJAAgAVQAKAGIABgBqAAIAcQAKAH4ACgCLAAQAkQAAAJUAAgCfAAMApgAAAKkACQC4AAEAuwAAAL0AAQDGAAIA2gAHAOQAAQDsAAMA9QAAAPgAAAD6AAAAAAEHAA==","P":[[19,"T"],[21,""],[24,"T"],[25,""],[26,"U"],[27,""],[32,"U,T"],[33,"U"],[34,""],[35,"V"],[36,""],[38,"T"],[40,""],[43,"T"],[44,"U"],[45,""],[48,"U,T"],[49,"U"],[50,""],[51,"V"],[53,"T"],[55,""],[58,"T"],[59,"U"],[60,""],[64,"U,T"],[65,"U"],[66,""],[67,"V"],[70,""],[78,"T"],[80,""],[82,"T"],[83,"U"],[84,""],[85,"U,T"],[86,"U"],[87,""],[88,"V"],[90,""],[91,"T"],[93,""],[95,"T"],[96,"U"],[97,""],[99,"U,T"],[100,"U"],[101,""],[102,"V"],[104,""],[105,"T"],[107,""],[109,"T"],[110,"U"],[111,""],[113,"U,T"],[114,"U"],[115,""],[116,"V"],[118,""],[119,"T"],[121,""],[123,"T"],[124,"U"],[125,""],[126,"U,T"],[127,"U"],[128,""],[129,"V"],[131,""],[132,"T"],[134,""],[136,"T"],[137,"U"],[138,""],[139,"U,T"],[140,"U"],[141,""],[142,"V"],[145,""],[148,"T"],[150,""],[151,"T"],[152,"U"],[153,""],[158,"U,T"],[159,"U"],[160,""],[161,"V"],[162,""],[168,"T"],[172,""],[174,"T"],[176,""],[185,"T"],[186,""],[187,"T"],[188,""],[192,"U"],[194,""],[217,"T"],[219,"U,T"],[221,"U"],[223,""],[227,"V"],[229,""],[235,"T"],[239,""],[241,"T"],[243,""],[245,"U"],[247,"I"],[248,""],[251,"D"],[252,"D,Iterator::Item"],[253,"D"],[254,""],[255,"U,T"],[257,"U"],[259,""],[261,"V"]]}]]'));
if (typeof exports !== 'undefined') exports.searchIndex = searchIndex;
else if (window.initSearch) window.initSearch(searchIndex);
//{"start":39,"fragment_lengths":[8228]}